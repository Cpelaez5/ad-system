import{q as n,i as p,u as d,g as i,s as c}from"./index-yJv21426.js";class u{constructor(){this.storageKey="sistema_contabilidad_clients"}async getClients(){try{console.log("🔄 Obteniendo clientes desde Supabase...");const{data:r,error:a}=await n("clients");if(a)return console.warn("⚠️ Error al obtener clientes desde Supabase, usando fallback:",a.message),await this.getClientsFallback();const t=r.map(e=>({id:e.id,companyName:e.company_name,rif:e.rif,taxpayerType:e.taxpayer_type,address:e.address,phone:e.phone,email:e.email,contactPerson:e.contact_person,website:e.website,status:e.status,createdAt:e.created_at,updatedAt:e.updated_at}));return console.log("✅ Clientes obtenidos desde Supabase:",t.length),t}catch(r){return console.error("❌ Error inesperado al obtener clientes:",r),await this.getClientsFallback()}}async getClientsFallback(){try{console.log("🔄 Obteniendo clientes desde fallback...");const r=[{id:"fallback-client-1",companyName:"Cliente Demo 1",rif:"J-12345678-9",taxpayerType:"JURIDICA",address:"Dirección Demo",phone:"+58 212 555-0001",email:"demo1@cliente.com",contactPerson:"Contacto Demo",website:"www.demo1.com",status:"ACTIVO",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];return console.log("✅ Clientes obtenidos desde fallback:",r.length),r}catch(r){return console.error("❌ Error en fallback de clientes:",r),[]}}async getClientById(r){try{console.log("🔄 Obteniendo cliente por ID desde Supabase...");const{data:a,error:t}=await n("clients","*",{id:r});if(t||!a||a.length===0)return console.error("❌ Cliente no encontrado en Supabase"),null;const e=a[0],s={id:e.id,companyName:e.company_name,rif:e.rif,taxpayerType:e.taxpayer_type,address:e.address,phone:e.phone,email:e.email,contactPerson:e.contact_person,website:e.website,status:e.status,createdAt:e.created_at,updatedAt:e.updated_at};return console.log("✅ Cliente obtenido desde Supabase:",s.companyName),s}catch(a){return console.error("❌ Error inesperado al obtener cliente:",a),null}}async createClient(r){try{console.log("🔄 Creando cliente en Supabase...");const a={company_name:r.companyName,rif:r.rif,taxpayer_type:r.taxpayerType||"JURIDICA",address:r.address,phone:r.phone,email:r.email,contact_person:r.contactPerson,website:r.website,status:r.status||"ACTIVO"},{data:t,error:e}=await p("clients",a);return e?(console.error("❌ Error al crear cliente en Supabase:",e.message),{success:!1,message:"Error al crear cliente"}):(console.log("✅ Cliente creado exitosamente en Supabase"),{id:t[0].id,companyName:t[0].company_name,rif:t[0].rif,taxpayerType:t[0].taxpayer_type,address:t[0].address,phone:t[0].phone,email:t[0].email,contactPerson:t[0].contact_person,website:t[0].website,status:t[0].status,createdAt:t[0].created_at,updatedAt:t[0].updated_at})}catch(a){return console.error("❌ Error inesperado al crear cliente:",a),{success:!1,message:"Error al crear cliente"}}}async updateClient(r,a){try{console.log("🔄 Actualizando cliente en Supabase...");const t={company_name:a.companyName,rif:a.rif,taxpayer_type:a.taxpayerType,address:a.address,phone:a.phone,email:a.email,contact_person:a.contactPerson,website:a.website,status:a.status};Object.keys(t).forEach(o=>{t[o]===void 0&&delete t[o]});const{data:e,error:s}=await d("clients",r,t);return s?(console.error("❌ Error al actualizar cliente en Supabase:",s.message),{success:!1,message:"Error al actualizar cliente"}):(console.log("✅ Cliente actualizado en Supabase"),{id:e[0].id,companyName:e[0].company_name,rif:e[0].rif,taxpayerType:e[0].taxpayer_type,address:e[0].address,phone:e[0].phone,email:e[0].email,contactPerson:e[0].contact_person,website:e[0].website,status:e[0].status,createdAt:e[0].created_at,updatedAt:e[0].updated_at})}catch(t){return console.error("❌ Error inesperado al actualizar cliente:",t),{success:!1,message:"Error al actualizar cliente"}}}async deleteClient(r){try{console.log("🔄 Eliminando cliente en Supabase (soft delete)...");const{data:a,error:t}=await d("clients",r,{status:"INACTIVO"});return t?(console.error("❌ Error al eliminar cliente en Supabase:",t.message),{success:!1,message:"Error al eliminar cliente"}):(console.log("✅ Cliente eliminado (soft delete) en Supabase"),{id:a[0].id,companyName:a[0].company_name,rif:a[0].rif,taxpayerType:a[0].taxpayer_type,address:a[0].address,phone:a[0].phone,email:a[0].email,contactPerson:a[0].contact_person,website:a[0].website,status:"INACTIVO",createdAt:a[0].created_at,updatedAt:a[0].updated_at})}catch(a){return console.error("❌ Error inesperado al eliminar cliente:",a),{success:!1,message:"Error al eliminar cliente"}}}async getClientStats(){try{console.log("🔄 Obteniendo estadísticas de clientes desde Supabase...");const r=i();if(!r)return console.error("❌ No hay organization_id disponible"),{total:0,byStatus:{},byType:{}};try{const{data:s,error:o}=await c.rpc("get_client_stats",{org_id:r});if(!o&&s)return console.log("✅ Estadísticas obtenidas desde función RPC"),{total:s.total||0,byStatus:s.by_status||{},byType:s.by_type||{}}}catch(s){console.warn("⚠️ Error en función RPC, calculando manualmente:",s.message)}const{data:a,error:t}=await n("clients");if(t)return console.error("❌ Error al obtener clientes para estadísticas:",t.message),{total:0,byStatus:{},byType:{}};const e={total:a.length,byStatus:{},byType:{}};return a.forEach(s=>{e.byStatus[s.status]=(e.byStatus[s.status]||0)+1,e.byType[s.taxpayer_type]=(e.byType[s.taxpayer_type]||0)+1}),console.log("✅ Estadísticas calculadas manualmente"),e}catch(r){return console.error("❌ Error inesperado al obtener estadísticas:",r),{total:0,byStatus:{},byType:{}}}}async searchClients(r){try{console.log("🔄 Buscando clientes en Supabase...");const a=i();if(!a)return console.error("❌ No hay organization_id disponible"),[];const{data:t,error:e}=await c.from("clients").select("*").eq("organization_id",a).or(`company_name.ilike.%${r}%,rif.ilike.%${r}%,contact_person.ilike.%${r}%,email.ilike.%${r}%`);if(e)return console.error("❌ Error al buscar clientes:",e.message),[];const s=t.map(o=>({id:o.id,companyName:o.company_name,rif:o.rif,taxpayerType:o.taxpayer_type,address:o.address,phone:o.phone,email:o.email,contactPerson:o.contact_person,website:o.website,status:o.status,createdAt:o.created_at,updatedAt:o.updated_at}));return console.log("✅ Clientes encontrados:",s.length),s}catch(a){return console.error("❌ Error inesperado al buscar clientes:",a),[]}}async validateUniqueRif(r,a=null){try{console.log("🔄 Validando RIF único en Supabase...");const t=i();if(!t)return console.error("❌ No hay organization_id disponible"),!1;let e=c.from("clients").select("id").eq("organization_id",t).eq("rif",r);a&&(e=e.neq("id",a));const{data:s,error:o}=await e;if(o)return console.error("❌ Error al validar RIF:",o.message),!1;const l=!s||s.length===0;return console.log("✅ RIF válido:",l),l}catch(t){return console.error("❌ Error inesperado al validar RIF:",t),!1}}}const b=new u;export{b as default};
