/**
 * Inicializaci√≥n de Tenant para el Sistema de Contabilidad
 * 
 * Este archivo se ejecuta al inicio de la aplicaci√≥n para asegurar
 * que el sistema tenga un organization_id v√°lido configurado.
 */

import { getCurrentOrganizationId } from './tenantHelpers.js'

/**
 * Inicializa el tenant del sistema
 * Se ejecuta al cargar la aplicaci√≥n para asegurar que hay un UUID v√°lido
 */
export function initializeTenant() {
  console.log('üîÑ Inicializando tenant del sistema...')
  
  try {
    const orgId = getCurrentOrganizationId()
    
    if (orgId && orgId !== 'mock-org-1' && orgId !== 'mock-org-2') {
      console.log('‚úÖ Tenant inicializado correctamente:', orgId)
      return orgId
    } else {
      console.error('‚ùå Error al inicializar tenant')
      return null
    }
  } catch (error) {
    console.error('‚ùå Error inesperado al inicializar tenant:', error)
    return null
  }
}

/**
 * Fuerza la limpieza y reinicializaci√≥n del tenant
 * √ötil para debugging o cuando hay problemas con el organization_id
 */
export function resetTenant() {
  console.log('üîÑ Reseteando tenant del sistema...')
  
  try {
    // Limpiar localStorage
    localStorage.removeItem('organization_id')
    
    // Establecer UUID real
    const defaultOrgId = '11111111-1111-1111-1111-111111111111'
    localStorage.setItem('organization_id', defaultOrgId)
    
    console.log('‚úÖ Tenant reseteado y UUID establecido:', defaultOrgId)
    return defaultOrgId
  } catch (error) {
    console.error('‚ùå Error al resetear tenant:', error)
    return null
  }
}

// Ejecutar inicializaci√≥n autom√°ticamente
initializeTenant()
